// make a circle
@mixin circle($width, $color) {
  width: $width;
  height: $width;
  background: $color;
  -webkit-border-radius: $width/2;
     -moz-border-radius: $width/2;
          border-radius: $width/2;
}

// triangle
// https://codepen.io/vieron/pen/xuHDA
@mixin triangle($size, $color, $direction) {
    height: 0;
    width: 0;
    border-color: transparent;
    border-style: solid;
    border-width: $size / 2;
    @if $direction == up {
      border-bottom-color: $color;
    } @else if $direction == right {
      border-left-color:   $color;
    } @else if $direction == down {
      border-top-color:    $color;
    } @else if $direction == left {
      border-right-color:  $color;
    }
}
@mixin bordered-triangle($size, $border-width, $color, $border-color, $direction, $alt: false) {
  $back-size: $size + ($border-width * 2);
  position: relative;
  min-width: $size;
  min-height: $size;
  &:after,
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
  }
  &:after {
     @include triangle($size, $color, $direction);
  }
  &:before {
    @include triangle($back-size, $border-color, $direction);
    $mid-border-width: ($border-width / 2);
    $border-width-and-mid: $border-width + $mid-border-width;
    @if ($alt == true) {
      $mid-border-width: 0;
      $border-width-and-mid: $border-width * 2;
    }
    @if ($direction == up) or ($direction == down) {
      margin-left: - $border-width;

      @if ($direction == down) {
        margin-top: -$mid-border-width;
      } @else {
        margin-top: - $border-width-and-mid;
      }
    } @else if ($direction == right) or ($direction == left) {
      margin-top: - $border-width;
      @if ($direction == right) {
        margin-left: - $mid-border-width;
      } @else {
        margin-left: - $border-width-and-mid;
      }
    }
  }
}

// vertically align without flexbox
@mixin vertically-align() {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

// Style placeholder text
@mixin placeholder($color, $size:"") {
  &::-webkit-input-placeholder {
    color: $color;
    @if $size != "" {
      font-size: $size;
    }
  }
  &:-moz-placeholder {
    color: $color;
    @if $size != "" {
      font-size: $size;
    }
  }
  &::-moz-placeholder {
    color: $color;
    @if $size != "" {
      font-size: $size;
    }
  }
  &:-ms-input-placeholder {
    color: $color;
    @if $size != "" {
      font-size: $size;
    }
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  -ms-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin column-count($columnCount) {
  -webkit-column-count: $columnCount;
  -moz-column-count: $columnCount;
  -ms-column-count: $columnCount;
  column-count: $columnCount;
}

@mixin appearance($appearance) {
  -webkit-appearance: $appearance;
  -moz-appearance: $appearance;
  appearance: $appearance;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  transition: $transition;
}

@mixin transform($transform) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -ms-transform: $transform;
  transform: $transform;
}

@mixin transform-origin($origin) {
  -webkit-transform-origin: $origin;
  -moz-transform-origin: $origin;
  -ms-transform-origin: $origin;
  transform-origin: $origin;
}

@mixin backface-visibility($visibility) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  backface-visibility: $visibility;
}

@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
      $animations: #{$animations + nth($animate, $i)};

      @if $i < $max {
          $animations: #{$animations + ", "};
      }
  }

  -webkit-animation: $animations;
  -moz-animation: $animations;
  -o-animation: $animations;
  animation: $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
      @content;
  }
  @-moz-keyframes #{$animationName} {
      @content;
  }
  @-o-keyframes #{$animationName} {
      @content;
  }
  @keyframes #{$animationName} {
      @content;
  }
}

@include keyframes(slideUp) {
  from { max-height: 1000px; }
  to { max-height: 0; }
}

@include keyframes(slideDown) {
  from { max-height: 0; }
  to { max-height: 1000px; }
}

@include keyframes(fadeIn) {
  from { opacity: 0; }
  to { opacity: 1; }
}

@include keyframes(fadeOut) {
  from { opacity: 1; }
  to { opacity: 0; }
}

@include keyframes(rotate) {
  from { @include transform(rotate(0)); }
  to { @include transform(rotate(360deg)); }
}

@mixin flex-wrap($value) {
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  -ms-flex-wrap: $value;
  flex-wrap: $value;
}

@mixin flex-direction($value) {
  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}


@mixin flex-flow($value) {
  -webkit-flex-flow: $value;
  -moz-flex-flow: $value;
  -ms-flex-flow: $value;
  flex-flow: $value;
}

@mixin justify-content($value) {
  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  -ms-justify-content: $value;
  justify-content: $value;
}

@mixin align-items($value) {
  -webkit-align-items: $value;
  -moz-align-items: $value;
  -ms-align-items: $value;
  align-items: $value;
}

@mixin align-content($value) {
  -webkit-align-content: $value;
  -moz-align-content: $value;
  -ms-align-content: $value;
  align-content: $value;
}

@mixin order($value) {
  -webkit-order: $value;
  -moz-order: $value;
  -ms-order: $value;
  order: $value;
}

@mixin flex-grow($value) {
  -webkit-flex-grow: $value;
  -moz-flex-grow: $value;
  -ms-flex-grow: $value;
  flex-grow: $value;
}


@mixin flex-shrink($value) {
  -webkit-flex-shrink: $value;
  -moz-flex-shrink: $value;
  -ms-flex-shrink: $value;
  flex-shrink: $value;
}

@mixin flex-basis($value) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-basis: $value;
  flex-basis: $value;
}

@mixin flex($value) {
  -webkit-flex: $value;
  -moz-flex: $value;
  -ms-flex: $value;
  flex: $value;
}

@mixin display-flex() {
  display: -webkit-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin align-self($value) {
  -webkit-align-self: $value;
  -moz-align-self: $value;
  -ms-align-self: $value;
  align-self: $value;
}
